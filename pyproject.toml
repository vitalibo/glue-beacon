[tool.poetry]
name = "glue-beacon"
version = "0.1.0"
description = ""
authors = ["Vitaliy Boyarsky <boyarsky.vitaliy@live.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
pytest = "~7.2.1"
pylint = "~2.15.10"
isort = "~5.11.5"
poethepoet = "~0.19.0"
boto3 = "~1.27.1"

[tool.poe]
poetry_command = ""
shell_interpreter = "bash"

[tool.poe.tasks.style]
help = "Run static code analyser."
sequence = [
    { cmd = "isort ./*.py" },
    { shell = "wget -q 'https://raw.githubusercontent.com/vitalibo/pylint-rules/master/.pylintrc' -O .pylintrc && pylint ./*.py --rcfile=.pylintrc && rm -rf .pylintrc" }
]

[tool.poe.tasks.test]
help = "Run unit tests."
cmd = "pytest -v -p no:cacheprovider ./*-test.py"

[tool.poe.tasks.compile]
help = "Compile CloudFormation template."
shell = "yq eval '.Resources.Lambda.Properties.Code.ZipFile = load_str(\"lambda.py\")' stack.yaml &> stack.output.yaml"

[tool.poe.tasks.clean]
help = "Clean workdir."
cmd = "rm -rf ./.pytest_cache ./build ./dist ./*.egg-info .pylintrc"

[tool.isort]
line_length = 120
multi_line_output = 3

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
